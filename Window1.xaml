<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Osrs_dps_calculator"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Osrs_dps_calculator.Window1"
        mc:Ignorable="d"
        Title="Results" 
        Height="Auto" 
        Width="Auto" d:DesignWidth="1537" d:DesignHeight="724">

    <Window.Resources>
        <CollectionViewSource x:Key="CollectionViewSource" Source="{Binding results_datagrid}" />

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Scrollbar -->
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#FF252019"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="Purple"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="Black"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#FF514736"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <!-- Scrollbar buttons up and down main color, and border -->
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#FF655841"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="Black"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.MouseOver.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#FF49402E"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#FF655841"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="Black" BorderThickness="1">
                            <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- button -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FF52524C"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF666666"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF4D4D49" Opacity="0.1"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent" Opacity="0.1"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White" Opacity="0.1"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF666666"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- combobox -->
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#6D5E44" Offset="0.0"/>
            <GradientStop Color="#6D5E44" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#6D5E44"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#463C31" Offset="0.0"/>
            <GradientStop Color="#463C31" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#463C31"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="White"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#463C31" Offset="0.0"/>
            <GradientStop Color="#463C31" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#463C31" Offset="0.0"/>
            <GradientStop Color="#463C31" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#463C31"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="White"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#463C31" Offset="0.0"/>
            <GradientStop Color="#463C31" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="Black"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false"/>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#463C31"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="#FF463C31" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Style.Resources>
                <Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollBarStyle1}" />
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- textbox -->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="white"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#554B41"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="#FFFF981F"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!-- checkbox -->
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="Black"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF9A835A"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="Green" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="Green"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="Green"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="Green"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF00F100"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{Binding MyBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="Purple"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="IsChecked" Value="False" />
            <Style.Triggers>
                <!-- Checkmarked -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <Path Data="M0,10 L9,17 L20,2" Stroke="{StaticResource OptionMark.Static.Glyph}" StrokeThickness="2" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <Path Data="M0,10 L9,17 L20,2" Stroke="{StaticResource OptionMark.Static.Glyph}" StrokeThickness="2" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <Path Data="M0,10 L9,17 L20,2" Stroke="{StaticResource OptionMark.Static.Glyph}" StrokeThickness="2" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="Black">
                                        <Path Data="M0,10 L9,17 L20,2" Stroke="{StaticResource OptionMark.Static.Glyph}" StrokeThickness="2" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <!-- Not Checkmarked -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <!-- no path for this -->
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <!-- no path for this -->
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="white" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="#FF3C3C3C">
                                        <!-- no path for this -->
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Condition 1 -->
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 2 -->
                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                        <!-- Condition 3 -->
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid Background="Transparent">
                                    <Border x:Name="CheckMark" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="Black">
                                        <!-- no path for this -->
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Data grid -->
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="Black" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="1" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#FF6D5E44"/>
            <Setter Property="Foreground" Value="#FFFB951D"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollBarStyle1}" />
            </Style.Resources>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>



    </Window.Resources>

    <Grid>

        <Grid.Background>
            <ImageBrush ImageSource="{DynamicResource background}" AlignmentX="Left" AlignmentY="Top" TileMode="FlipY" Stretch="Uniform" Viewport="0,0,480,270" ViewportUnits="Absolute" />
        </Grid.Background>

        <DataGrid ItemsSource="{Binding Source={StaticResource CollectionViewSource}}" Margin="0,240,0,0" Language="en-US" Style="{DynamicResource DataGridStyle1}" Foreground="#FFFB951D" Background="#FF6D5E44" AlternationCount="2">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#FF594D39" />
                    <Setter Property="Foreground" Value="#FFFB951D" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Padding" Value="5" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#FF463C2C" />
                            <Setter Property="Foreground" Value="#FFFB951D" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="Padding" Value="5" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#FF594D39" />
                            <Setter Property="Foreground" Value="#FFFB951D" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="Padding" Value="5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="#FF6D5E44" />
                    <Setter Property="Foreground" Value="#FFFB951D" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Padding" Value="5" />
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#FF52524C" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Padding" Value="5" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>


        <TextBox x:Name="monster_atk_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,71,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_str_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,96,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_def_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,121,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_magic_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,146,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_range_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,171,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_hp_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="756,196,0,0" TextWrapping="Wrap" Text="0/0" VerticalAlignment="Top" Width="84" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_stab_def_textbox" HorizontalAlignment="Left" Height="24" Margin="940,71,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_slash_def_textbox" HorizontalAlignment="Left" Height="24" Margin="940,96,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_crush_def_textbox" HorizontalAlignment="Left" Height="24" Margin="940,121,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_magic_def_textbox" HorizontalAlignment="Left" Height="24" Margin="940,146,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_range_def_textbox" HorizontalAlignment="Left" Height="24" Margin="940,171,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="bgs_dmg_textbox" HorizontalAlignment="Left" Height="24" Margin="684,171,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <TextBox x:Name="dwh_hits_textbox" HorizontalAlignment="Left" Height="24" Margin="684,146,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <TextBox x:Name="arclight_hits_textbox" HorizontalAlignment="Left" Height="24" Margin="684,121,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <CheckBox x:Name="tome_of_water_checkbox" Content="" HorizontalAlignment="Left" Margin="624,46,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <CheckBox x:Name="vulnerability_checkbox" Content="" HorizontalAlignment="Left" Margin="692,46,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <TextBox x:Name="max_defence_roll_stab_textbox" HorizontalAlignment="Left" Height="24" Margin="984,71,0,0" Text="0" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="max_defence_roll_slash_textbox" HorizontalAlignment="Left" Height="24" Margin="984,96,0,0" Text="0" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="max_defence_roll_crush_textbox" HorizontalAlignment="Left" Height="24" Margin="984,121,0,0" Text="0" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="max_defence_roll_magic_textbox" HorizontalAlignment="Left" Height="24" Margin="984,146,0,0" Text="0" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="max_defence_roll_range_textbox" HorizontalAlignment="Left" Height="24" Margin="984,171,0,0" Text="0" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <CheckBox x:Name="slayer_task_checkbox" Content="" HorizontalAlignment="Left" Margin="562,146,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,196,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource hitpoints icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC hitpoints level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,146,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource slayer icon}">
            <Image.ToolTip>
                <ToolTip Content="On slayer task"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="658,46,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource vulnerability icon}">
            <Image.ToolTip>
                <ToolTip Content="Vulnerability. Can only lower stats once"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="598,46,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource tome of water icon}">
            <Image.ToolTip>
                <ToolTip Content="Tome of water. Boosts curse spells from 10% to 15%"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="656,121,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource arclight icon}">
            <Image.ToolTip>
                <ToolTip Content="Arclight hits"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="656,146,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource dwh icon}">
            <Image.ToolTip>
                <ToolTip Content="Dragon warhammer hits"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="656,171,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource bgs icon}">
            <Image.ToolTip>
                <ToolTip Content="Bandos godsword damage"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource attack icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC Attack level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,96,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource strength icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC strength level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,121,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC defence level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,146,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource magic icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC magic level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="728,171,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource ranged icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC range level (Reduced stat/base stat)"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="914,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource stab defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC stab defence"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="914,96,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource slash defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC slash defence"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="914,121,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource crush defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC crush defence"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="914,146,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource mage defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC magic defence"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="914,171,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource range defence icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC range defence"/>
            </Image.ToolTip>
        </Image>
        <TextBox x:Name="team_size_textbox" HorizontalAlignment="Left" Height="24" Margin="554,71,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="1" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <TextBox x:Name="raid_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="554,96,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <TextBox x:Name="path_lvl_textbox" HorizontalAlignment="Left" Height="24" Margin="554,46,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource team size icon}">
            <Image.ToolTip>
                <ToolTip Content="Raid team size"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,96,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource raid lvl icon}">
            <Image.ToolTip>
                <ToolTip Content="Tombs of Amascut raid level"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,46,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource path lvl icon}">
            <Image.ToolTip>
                <ToolTip Content="Tombs of Amascut path level"/>
            </Image.ToolTip>
        </Image>
        <CheckBox x:Name="CM_cox_checkbox" Content="" HorizontalAlignment="Left" Margin="562,121,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,121,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource cm cox icon}">
            <Image.ToolTip>
                <ToolTip Content="Challenge mode CoX"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="656,196,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource hitsplat icon}">
            <Image.ToolTip>
                <ToolTip Content="Damage dealt to monster"/>
            </Image.ToolTip>
        </Image>
        <TextBox x:Name="dmg_textbox" HorizontalAlignment="Left" Height="24" Margin="684,196,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="40" Text="0" Style="{DynamicResource TextBoxStyle1}" IsEnabled="False"/>
        <TextBox HorizontalAlignment="Left" Height="24" Margin="984,46,0,0" TextWrapping="Wrap" Text="Max defence rolls" VerticalAlignment="Top" Width="100" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="656,96,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource accursed sceptre icon}">
            <Image.ToolTip>
                <ToolTip Content="Accursed sceptre special attack. Can only lower stats once"/>
            </Image.ToolTip>
        </Image>
        <CheckBox x:Name="accursed_secptre_checkbox" Content="" HorizontalAlignment="Left" Margin="692,96,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <CheckBox x:Name="red_keris_spec_checkbox" Content="" HorizontalAlignment="Left" Margin="562,196,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,196,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource red keris spec icon}">
            <Image.ToolTip>
                <ToolTip Content="Red keris special active. Only applies buff to monsters in Tombs of Amascut"/>
            </Image.ToolTip>
        </Image>
        <CheckBox x:Name="enfeeble_checkbox" Content="" HorizontalAlignment="Left" Margin="624,71,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="598,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource enfeeble icon}">
            <Image.ToolTip>
                <ToolTip Content="Enfeeble. Can only lower stats once"/>
            </Image.ToolTip>
        </Image>
        <CheckBox x:Name="stun_checkbox" Content="" HorizontalAlignment="Left" Margin="692,71,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="658,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource stun icon}">
            <Image.ToolTip>
                <ToolTip Content="Stun. Can only lower stats once"/>
            </Image.ToolTip>
        </Image>
        <CheckBox x:Name="kandarin_diary_checkbox" Content="" HorizontalAlignment="Left" Margin="562,171,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="24" Style="{DynamicResource CheckBoxStyle1}" Height="24" IsEnabled="False"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="524,171,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource diary icon}">
            <Image.ToolTip>
                <ToolTip Content="Kandarin hard diary (10% higher bolt proc chances)"/>
            </Image.ToolTip>
        </Image>
        <ComboBox x:Name="monsters_combobox" HorizontalAlignment="Left" Margin="728,46,0,0" VerticalAlignment="Top" Width="250" Height="24" StaysOpenOnEdit="True" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFFB951D" SelectionChanged="monster_name_combobox_selection_changed" IsEditable="True">
            <ComboBox.ToolTip>
                <ToolTip Content="Select the loadout you want"/>
            </ComboBox.ToolTip>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border BorderBrush="Black" BorderThickness="0.5" Background="#FF463C31">
                                    <Grid>
                                        <TextBlock Text="{Binding}" Margin="5" Foreground="#FFFD961D" FontSize="10" />
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,171,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource ranged icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive range bonus"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,121,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource magic icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive magic bonus"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,196,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource ranged strength}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive range strength bonus"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,146,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource magic dmg icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive magic damage bonus"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,71,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource attack icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive attack bonus"/>
            </Image.ToolTip>
        </Image>
        <Image HorizontalAlignment="Left" Height="24" Margin="844,96,0,0" VerticalAlignment="Top" Width="24" Source="{DynamicResource strength icon}">
            <Image.ToolTip>
                <ToolTip Content="NPC aggressive strength bonus"/>
            </Image.ToolTip>
        </Image>
        <TextBox x:Name="monster_aggressive_atk_textbox" HorizontalAlignment="Left" Height="24" Margin="870,71,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_aggressive_str_textbox" HorizontalAlignment="Left" Height="24" Margin="870,96,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_aggressive_mage_textbox" HorizontalAlignment="Left" Height="24" Margin="870,121,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_aggressive_mage_dmg_textbox" HorizontalAlignment="Left" Height="24" Margin="870,146,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_aggressive_range_textbox" HorizontalAlignment="Left" Height="24" Margin="870,171,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox x:Name="monster_aggressive_range_str_textbox" HorizontalAlignment="Left" Height="24" Margin="870,196,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="40" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}"/>
        <TextBox HorizontalAlignment="Left" Height="38" Margin="10,189,0,0" Text="Data sorting doesnt work well for max hits, max attack rolls, hit chance % and average dmg. Extra info added to these variables in some weapons mess it up." VerticalAlignment="Top" Width="495" IsEnabled="False" Style="{DynamicResource TextBoxStyle1}" TextWrapping="WrapWithOverflow"/>
        <Border BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" Height="188" Margin="515,39,0,0" VerticalAlignment="Top" Width="574" CornerRadius="10"/>
        <Border BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" Height="31" Margin="515,10,0,0" VerticalAlignment="Top" Width="133" CornerRadius="10" Background="#FF514736">
            <TextBox HorizontalAlignment="Left" Height="20" Margin="0,4,-2,0" TextWrapping="Wrap" Text="Data filter by monster" VerticalAlignment="Top" Width="131" TextAlignment="Center" IsEnabled="False" BorderBrush="{x:Null}" Foreground="#FFFF981F" Background="{x:Null}"/>
        </Border>
    </Grid>
</Window>
